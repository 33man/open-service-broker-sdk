kind: Template
apiVersion: v1
metadata:
  name: "kube-wardle"
labels:
  createdBy: "kube-wardle"
parameters:
  - name: CLIENT_CA
    description: "ca for validating clients"
    required: true
  - name: SERVING_CRT
    description: "serving cert"
    required: true
  - name: SERVING_KEY
    description: "serving key"
    required: true
  - name: KUBECONFIG
    description: "kubeconfig identifying this apiserver pod to the core apiserver"
    required: true
  - name: NAMESPACE
    description: "namespace for this pod"
    required: true
  - name: CONFIG_DIR
    description: "config dir for hostpath"
    required: true
  - name: CONFIG_DIR_MOUNT
    description: "config dir to mount the hostpath"
    required: true
objects:
  - kind: Pod
    apiVersion: v1
    metadata:
      name: "brokersdk"
      namespace: "${NAMESPACE}"
      labels:
        app: "brokersdk"
    spec:
      hostNetwork: true
      containers:
        - name: "apiserver"
          image: "deads2k/kube-sample-apiserver"
          args:
          - "--authentication-skip-lookup"
          - "--authentication-kubeconfig=${KUBECONFIG}"
          - "--authorization-kubeconfig=${KUBECONFIG}"
          - "--client-ca-file=${CLIENT_CA}"
          - "--etcd-servers=http://127.0.0.1:2379"
          - "--tls-cert-file=${SERVING_CRT}"
          - "--tls-private-key-file=${SERVING_KEY}"
          - "--v=5"
          ports:
            - containerPort: 443
              protocol: TCP
          volumeMounts:
          - name: config-dir
            mountPath: ${CONFIG_DIR_MOUNT}
          livenessProbe: 
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 443
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
        - name: etcd
        image: quay.io/coreos/etcd:v3.0.17
      volumes:
      - name: config-dir
        hostPath:
          path: ${CONFIG_DIR}
